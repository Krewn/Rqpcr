y <- pcrfit(n[[4]], 1, k, l4)
efficiency(y)
fluo[k-1] <- y$init1
}
fluo <- list()
for(k in 2:length(n[[4]])) {
y <- pcrfit(n[[4]], 1, k, l4)
efficiency(y)
fluo[[k-1]] <- y$init1
}
print(fluo)
plot(fluo[[1]])
print(y$init1)
for(k in 2:length(n[[4]])) {
y <- pcrfit(n[[4]], 1, k, l4)
efficiency(y)
print(y$init1)
fluo[[k-1]] <- y$init1
}
print(y[$init1])
print(y)
efficiency(y$init1)
for(k in 2:length(n[[4]])) {
y <- pcrfit(n[[4]], 1, k, l4)
efficiency(y$init1)
print(y)
fluo[[k-1]] <- y$init1
}
for(k in 2:length(n[[4]])) {
y <- pcrfit(n[[4]], 1, k, l4)
efficiency(y)
print(y)
fluo[[k-1]] <- y$init1
}
for(k in 2:length(n[[4]])) {
y <- pcrfit(n[[4]], 1, k, l4)
x <- efficiency(y)
fluo[[k-1]] <- x[$init1]
}
for(k in 2:length(n[[4]])) {
y <- pcrfit(n[[4]], 1, k, l4)
x <- efficiency(y)
fluo[[k-1]] <- x[init1]
}
for(k in 2:length(n[[4]])) {
y <- pcrfit(n[[4]], 1, k, l4)
efficiency(y$init1)
}
for(k in 2:length(n[[4]])) {
y <- pcrfit(n[[4]], 1, k, l4)
x <- efficiency(y)
print(x)
}
for(k in 2:length(n[[4]])) {
y <- pcrfit(n[[4]], 1, k, l4)
x <- efficiency(y)
print(x$init1)
}
fluo <- list()
for(k in 2:length(n[[4]])) {
y <- pcrfit(n[[4]], 1, k, l4)
x <- efficiency(y)
fluo[[k-1]] <- x$init1
}
plot(fluo[[1]])
plot(fluo[[1]])
for(k in 2:length(fluo)) {
point(fluo[[k]])
}
for(k in 2:length(fluo)) {
points(fluo[[k]])
}
fluo <- list()
for(k in 2:length(n[[4]])) {
y <- pcrfit(n[[4]], 1, k, l4)
x <- efficiency(y)
fluo[[k-1]] <- x$init1
}
plot(fluo)
plot(fluo[[1]])
for(k in 2:length(fluo)) {
points(fluo[[k]])
}
heatmap(fluo)
heatmap(as.matrix(fluo))
fluo <- list()
eff <- list()
for(k in 2:length(n[[4]])) {
y <- pcrfit(n[[4]], 1, k, l4)
x <- efficiency(y)
fluo[[k-1]] <- x$init1
eff[[k-1]] <- x$eff
}
plot(eff[[1]],fluo[[1]])
for(k in 2:length(fluo)) {
points(eff[[k]], fluo[[k]])
}
plot(eff[[1]],fluo[[1]], xlab="efficiency", ylab="Initial Fluorescence")
for(k in 2:length(fluo)) {
points(eff[[k]], fluo[[k]])
}
library(ggplot2)
plot(eff[[1]],fluo[[1]], xlab="efficiency", ylab="Initial Fluorescence")
for(k in 2:length(fluo)) {
points(eff[[k]], fluo[[k]])
}
bin.plot<-qplot(x=eff,y=fluo)
library(ggplot2)
plot(eff[[1]],fluo[[1]], xlab="efficiency", ylab="Initial Fluorescence")
for(k in 2:length(fluo)) {
points(eff[[k]], fluo[[k]])
}
bin.plot<-qplot(x=eff,y=fluo)
library(ggplot2)
plot(eff[[1]],fluo[[1]], xlab="efficiency", ylab="Initial Fluorescence")
for(k in 2:length(fluo)) {
points(eff[[k]], fluo[[k]])
}
bin.plot<-qplot(x=eff,y=fluo)
library(ggplot2)
plot(eff[[1]],fluo[[1]], xlab="efficiency", ylab="Initial Fluorescence")
for(k in 2:length(fluo)) {
points(eff[[k]], fluo[[k]])
}
bin.plot<-qplot(x=eff,y=fluo)
library(ggplot2)
plot(eff[[1]],fluo[[1]], xlab="efficiency", ylab="Initial Fluorescence")
for(k in 2:length(fluo)) {
points(eff[[k]], fluo[[k]])
}
bin.plot<-qplot(x=eff,y=fluo)
library(ggplot2)
plot(eff[[1]],fluo[[1]], xlab="efficiency", ylab="Initial Fluorescence")
for(k in 2:length(fluo)) {
points(eff[[k]], fluo[[k]])
}
bin.plot<-qplot(x=eff,y=fluo)
plot(eff[[1]],fluo[[1]], xlab="efficiency", ylab="Initial Fluorescence")
for(k in 2:length(fluo)) {
points(fluo[[k]], eff[[k]])
}
plot(eff[[1]],fluo[[1]], xlab="efficiency", ylab="Initial Fluorescence")
for(k in 2:length(fluo)) {
points(fluo[[k]], eff[[k]])
}
fluo <- list()
eff <- list()
for(k in 2:length(n[[4]])) {
y <- pcrfit(n[[4]], 1, k, l4)
x <- efficiency(y)
fluo[[k-1]] <- x$init1
eff[[k-1]] <- x$eff
}
fluo <- list()
eff <- list()
for(k in 2:length(n[[4]])) {
y <- pcrfit(n[[4]], 1, k, l4)
x <- efficiency(y, plot=FALSE)
fluo[[k-1]] <- x$init1
eff[[k-1]] <- x$eff
}
plot(eff[[1]],fluo[[1]], xlab="efficiency", ylab="Initial Fluorescence")
for(k in 2:length(fluo)) {
points(fluo[[k]], eff[[k]])
}
for(k in 2:length(n[[4]])) {
y <- pcrfit(n[[4]], 1, k, l4)
x <- efficiency(y, plot=FALSE)
fluo[[k-1]] <- x$init1
print(fluo[[k-1]])
eff[[k-1]] <- x$eff
}
plot(eff[[1]],fluo[[1]], xlab="efficiency", ylab="Initial Fluorescence")
for(k in 2:length(fluo)) {
points(fluo[[k]], eff[[k]])
}
fluo <- list()
eff <- list()
for(k in 2:100) {
y <- pcrfit(n[[4]], 1, k, l4)
x <- efficiency(y, plot=FALSE)
fluo[[k-1]] <- x$init1
print(fluo[[k-1]])
eff[[k-1]] <- x$eff
}
plot(eff[[1]],fluo[[1]], xlab="efficiency", ylab="Initial Fluorescence")
for(k in 2:length(fluo)) {
points(fluo[[k]], eff[[k]])
}
print(length(fluo))
plot(eff[[1]],fluo[[1]], xlab="efficiency", ylab="Initial Fluorescence")
for(k in 2:length(fluo)) {
points(fluo[[k]], eff[[k]])
}
fluo1 <- list()
fluo <- list()
eff <- list()
for(k in 2:length(norms)) {
y <- pcrfit(as.data.frame(norms), 1, k, l4)
x <- efficiency(y, plot=FALSE)
fluo1[[k-1]] <- as.numeric(x$init1)
tt <- c(k, "/", length(norms))
print(tt)
print(x$init1)
eff[[k-1]] <- as.numeric(x$eff)
}
#############################################
#Packae is liscnesed by                     #
#  KrewnSolotions   /< /? [- \/\/ |\|       #
source("./qpcRsources.R")                   #
#############################################
gd <- getData()
LOLprint(gd)
n <- gdToDf(gd)
#for(k in n){print(c(k)}
pcrfit(as.data.frame(n[[3]]), cyc=1, 1, start = NULL, offset= 0, weight =NULL ,verbose=TRUE)
plot(pcrfit(n[[2]], 1,2,l4))
title(main=names(n)[2])
plot(pcrfit(n[[3]], 1,2,l4))
title(main=names(n)[3])
plot(pcrfit(n[[4]], 1,2,l4))
title(main=names(n)[4])
plot(pcrfit(n[[5]], 1,2,l4))
title(main=names(n)[5])
norms <- list()
norms[[1]] <- n[[4]][[1]]
for(k in 2:length(n[[4]])) {
norms[[k]] <- (n[[4]][[k]] - n[[2]][[k]])
}
df <- data.frame(matrix(unlist(norms), nrow=30))
fluo1 <- list()
fluo <- list()
eff <- list()
for(k in 2:length(norms)) {
y <- pcrfit(as.data.frame(norms), 1, k, l4)
x <- efficiency(y, plot=FALSE)
fluo1[[k-1]] <- as.numeric(x$init1)
tt <- c(k, "/", length(norms))
print(tt)
print(x$init1)
eff[[k-1]] <- as.numeric(x$eff)
}
for(k in 2:length(df)) {
y <- tryCatch(pcrfit(df, 1, k, l4))
x <- efficiency(y, plot=FALSE)
fluo1[[k-1]] <- as.numeric(x$init1)
tt <- c(k, "/", length(norms))
print(tt)
print(x$init1)
eff[[k-1]] <- as.numeric(x$eff)
}
print(df[[26]])
print(df[[24]])
print(df[[25]])
y <- pcrfit(df, 1, 25, l4)
y <- pcrfit(df, 1, 26, l4)
y <- pcrfit(df, 1, 27, l4)
for(k in 2:length(df)) {
if(k != 26) {
y <- pcrfit(df, 1, k, l4)
x <- efficiency(y, plot=FALSE)
fluo1[[k-1]] <- as.numeric(x$init1)
tt <- c(k, "/", length(norms))
print(tt)
print(x$init1)
eff[[k-1]] <- as.numeric(x$eff)
}
}
norms <- list()
norms[[1]] <- n[[4]][[1]]
for(k in 2:length(n[[4]])) {
norms[[k]] <- (n[[4]][[k]] - n[[2]][[k]])
}
df <- data.frame(matrix(unlist(norms), nrow=30))
fluo1 <- list()
fluo <- list()
eff <- list()
for(k in 2:length(df)) {
if(pcrfit(df, 1, k, l4) != NULL || pcrfit(df, 1, k, l4) != NA) {
y <- pcrfit(df, 1, k, l4)
x <- efficiency(y, plot=FALSE)
fluo1[[k-1]] <- as.numeric(x$init1)
tt <- c(k, "/", length(norms))
print(tt)
print(x$init1)
eff[[k-1]] <- as.numeric(x$eff)
}
}
tryCatch({
pcrfit(df, 1, 26, l4)},
error = function(err) {
print("error")
})
tryCatch({
pcrfit(df, 1, 27, l4)},
error = function(err) {
print("error")
})
fluo1 <- list()
fluo <- list()
eff <- list()
for(k in 2:length(df)) {
tryCatch({
y <- pcrfit(df, 1, k, l4)
x <- efficiency(y, plot=FALSE)
fluo1[[k-1]] <- as.numeric(x$init1)
tt <- c(k, "/", length(norms))
print(tt)
print(x$init1)
eff[[k-1]] <- as.numeric(x$eff)
}, error = function(err) {
}
fluo1 <- list()
fluo <- list()
eff <- list()
for(k in 2:length(df)) {
tryCatch({
y <- pcrfit(df, 1, k, l4)
x <- efficiency(y, plot=FALSE)
fluo1[[k-1]] <- as.numeric(x$init1)
tt <- c(k, "/", length(norms))
print(tt)
print(x$init1)
eff[[k-1]] <- as.numeric(x$eff)
}, error = function(err) {})
}
runNum <- seq(1,9217)
df <- data.frame(x=runNum, y=as.numeric(fluo))
ggplot(as.data.frame(df), aes(x=x, y=y)) + ylab("Initial Template Fluorescence") + xlab("Run Number") + ggtitle("F0 vs Run #") + geom_point(alpha = 0.4) + ylim(c(0,25000)) + geom_point()
runNum <- seq(1,length(fluo))
df <- data.frame(x=runNum, y=as.numeric(fluo))
ggplot(as.data.frame(df), aes(x=x, y=y)) + ylab("Initial Template Fluorescence") + xlab("Run Number") + ggtitle("F0 vs Run #") + geom_point(alpha = 0.4) + ylim(c(0,25000)) + geom_point()
plot(runNum,fluo)
runNum <- seq(1,length(fluo1))
plot(runNum,fluo1)
print(length(fluo1))
runNum <- seq(1,9216)
plot(runNum,fluo1)
plot(runNum, as.numeric(fluo1))
print(fluo1)
df1 <- data.frame(x=runNum, y=as.numeric(fluo1))
ggplot(as.data.frame(df1), aes(x=x, y=y)) + ylab("Initial Template Fluorescence") + xlab("Run Number") + ggtitle("F0 vs Run #") + geom_point(alpha = 0.4) + ylim(c(0,25000)) + geom_point()
df1 <- data.frame(x=runNum, y=as.numeric(fluo1))
print(df1)
source('C:/Users/requiem/Downloads/Rqpcr-master/SandBox.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
df1 <- data.frame(x=runNum, y=fluo1)
runNum <- seq(1,length(fluo1))
df1 <- data.frame(x=runNum, y=fluo1)
print(fluo1)
print(length(fluo1))
y <- pcrfit(df, 1, k+1, l4)
temp <- k+1
y <- pcrfit(df, 1, temp, l4)
df <- data.frame(matrix(unlist(norms), nrow=30))
fluo1 <- list()
fluo <- list()
eff <- list()
for(k in 2:length(df)) {
tryCatch({
y <- pcrfit(df, 1, k, l4)
x <- efficiency(y, plot=FALSE)
fluo1[[k-1]] <- as.numeric(x$init1)
tt <- c(k, "/", length(norms))
print(tt)
print(x$init1)
eff[[k-1]] <- as.numeric(x$eff)
}, error = function(err) {
y <- pcrfit(df, 1, k+1, l4)
x <- efficiency(y, plot=FALSE)
fluo1[[k-1]] <- as.numeric(x$init1)
})
}
fluo1 <- list()
fluo <- list()
eff <- list()
for(k in 2:length(df)) {
tryCatch({
y <- pcrfit(df, 1, k, l4)
x <- efficiency(y, plot=FALSE)
fluo1[[k-1]] <- as.numeric(x$init1)
tt <- c(k, "/", length(norms))
print(tt)
print(x$init1)
eff[[k-1]] <- as.numeric(x$eff)
}, error = function(err) {
y <- pcrfit(df, 1, k+1, l4)
x <- efficiency(y, plot=FALSE)
fluo1[[k-1]] <- as.numeric(x$init1)
print(tt)
print(x$init1)
})
}
fluo1 <- list()
fluo <- list()
eff <- list()
for(k in 2:length(df)) {
tryCatch({
y <- pcrfit(df, 1, k, l4)
x <- efficiency(y, plot=FALSE)
fluo1[[k-1]] <- as.numeric(x$init1)
tt <- c(k, "/", length(norms))
print(tt)
print(x$init1)
eff[[k-1]] <- as.numeric(x$eff)
}, error = function(err) {
#           y <- pcrfit(df, 1, k+1, l4)
#           x <- efficiency(y, plot=FALSE)
#           fluo1[[k-1]] <- as.numeric(x$init1)
#           print(tt)
#           print(x$init1)
})
}
print(unique(fluo1))
print(length(xyt))
xyt <- unique(fluo1)
print(length(xyt))
df1 <- data.frame(x=runNum, y=xyt)
ggplot(as.data.frame(df1), aes(x=x, y=y)) + ylab("Initial Template Fluorescence") + xlab("Run Number") + ggtitle("F0 vs Run #") + geom_point(alpha = 0.4) + ylim(c(0,25000)) + geom_point()
print(length(fluo1))
print(length(xyt))
print(length(fluo1[fluo1 != ""]))
print(length(fluo1[fluo1 != 0]))
print(length(fluo1[fluo1 != NA]))
print(length(fluo1[fluo1 != NULL]))
plot(fluo1)
runNum <- seq(1,length(fluo1))
plot(runNum, fluo1)
plot(as.numeric(runNum), as.numeric(fluo1))
plot(runNum, as.data.frame(fluo1))
plot(runNum[[1]], fluo1[[1]])
for(k in 2:length(fluo1)) {
points(runNum[[k]], fluo1[[k]])
}
plot(unlist(runNum), unlist(fluo1))
runNum <- seq(1,length(fluo1))
plot(unlist(runNum), unlist(fluo1))
plot(runNum)
plot(fluo1)
plot(fluo1, fluo1)
runNum <- seq(1,length(fluo1))
plot(runNum[[1]], fluo1[[1]])
for(k in 2:length(fluo1)) {
points(runNum[[k]], fluo1[[k]])
}
print(fluo1)
source('C:/Users/requiem/Downloads/Rqpcr-master/SandBox.R', echo=TRUE)
fluo1 <- list() #some shitty containers to hold that nonsense
eff <- list()
for(k in 2:length(df)) {
tryCatch({
y <- pcrfit(df, 1, k, l4)
x <- efficiency(y, plot=FALSE)
fluo1[[k-1]] <- x$init1
tt <- c(k, "/", length(norms))
print(tt)
print(x$init1)
eff[[k-1]] <- x$eff
}, error = function(err) {
#           y <- pcrfit(df, 1, k+1, l4)
#           x <- efficiency(y, plot=FALSE)
#           fluo1[[k-1]] <- as.numeric(x$init1)
#           print(tt)
#           print(x$init1)
})
}
print(fluo1)
plot(fluo1)
xn <- seq(1,length(fluo1))
plot(xn, fluo1)
plot(eff, fluo1)
fluo1 <- list() #some shitty containers to hold that nonsense
eff <- list()
for(k in 2:length(df)) {
tryCatch({
y <- pcrfit(df, 1, k, l4)
x <- efficiency(y, plot=FALSE)
fluo1[[k-1]] <- x$init1
tt <- c(k, "/", length(norms))
print(tt)
print(x$init1)
eff[[k-1]] <- x$eff
}, error = function(err) {
#           y <- pcrfit(df, 1, k+1, l4)
#           x <- efficiency(y, plot=FALSE)
#           fluo1[[k-1]] <- as.numeric(x$init1)
#           print(tt)
#           print(x$init1)
})
}
source('~/GitHub/Rqpcr/SandBox.R', echo=TRUE)
source('~/GitHub/Rqpcr/SandBox.R', echo=TRUE)
plot(norms[[1]])
plot(norms[[2]])
plot(norms[[10]])
plot(norms[[11]])
plot(norms[[9]])
plot(norms[[10]])
plot(norms[[11]])
y <- pcrfit(norms[[11]], 1, 2, l4)
x <- efficiency(y, plot=TRUE, type="Cy0") #type = method of efficiency estimation
y <- pcrfit(norms[[10]], 1, 2, l4)
df <- data.frame(matrix(unlist(norms), nrow=30)) #create data frame for pcrfit
y <- pcrfit(df, 1, 2, l4)
x <- efficiency(y, plot=FALSE, type="Cy0") #type = method of efficiency estimation
df <- data.frame(matrix(unlist(norms), nrow=30)) #create data frame for pcrfit
y <- pcrfit(df, 1, 2, l4)
x <- efficiency(y, plot=TRUE, type="Cy0") #type = method of efficiency estimation
y <- pcrfit(df, 1, 11, l4)
x <- efficiency(y, plot=TRUE, type="Cy0") #type = method of efficiency estimation
y <- pcrfit(df, 1, 10, l4)
x <- efficiency(y, plot=TRUE, type="Cy0") #type = method of efficiency estimation
